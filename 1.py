current_population_data=[]
current_number_of_doctors=dict()
future_population_data=[]
current_total_population=0
future_total_population=0
born_rate=0.0
disease_ratio={ #{disease code: [ratio of 0~9, 10~19, ..., 90~99]}
    "E11":[0,0.0016,0.0054,0.017,0.0465,0.0949,0.153,0.2045,0.1649,0.1649],
    "I10":[0,0.0002,0.0062,0.0307,0.1042,0.2098,0.3102,0.3942,0.3888,0.3888],
    "K21":[0.0004,0.0008,0.0643,0.0818,0.1033,0.1118,0.1434,0.1613,0.1073,0.1073],
    "Z11":[0.0758,0.0181,0.0444,0.0535,0.0483,0.0459,0.0457,0.0459,0.0312,0.0312],
    "I20":[0,0.0001,0.0005,0.0012,0.0037,0.0121,0.031,0.057,0.0521,0.0521],
    "R10":[0.0295,0.0214,0.0426,0.0576,0.0516,0.0521,0.0574,0.056,0.0411,0.0411],
    "K29":[0.0023,0.0037,0.0781,0.0898,0.1048,0.1068,0.1291,0.146,0.1133,0.1133],
    "J20":[0.2039,0.0194,0.2672,0.3179,0.2868,0.2317,0.2607,0.2656,0.1987,0.1987],
    "K63":[0.0038,0.0018,0.0034,0.0171,0.0367,0.0496,0.0588,0.0462,0.0106,0.0106],
    "E78":[0,0,0.0093,0.0262,0.0585,0.1065,0.1341,0.1009,0.0471,0.0471],
    "A09":[0.1456,0.0519,0,0,0,0,0,0,0,0],
    "J02":[0.0614,0.0057,0,0,0,0,0,0,0,0],
    "J30":[0.0064,0.0057,0,0,0,0,0,0,0,0],
    "J03":[0.1046,0.0084,0,0,0,0,0,0,0,0],
    "J01":[0.0109,0.0002,0,0,0,0,0,0,0,0],
    "J18":[0.3035,0.0161,0,0,0,0,0,0,0,0],
    "J10":[0.1636,0.0597,0,0,0,0,0,0,0,0],
    "J06":[0.0052,0.0062,0,0,0,0,0,0,0,0],
    "R50":[0.0191,0.0201,0,0,0,0,0,0,0,0],
    "D25":[0,0,0.0024,0.0141,0.0287,0.0233,0.0101,0.0035,0,0],
    "Z34":[0,0,0.0146,0.0452,0.004,0,0,0,0,0],
    "N95":[0,0,0,0,0.0105,0.0457,0.0297,0.0133,0.004,0.004],
    "N72":[0,0,0.0337,0.0391,0.0294,0.0223,0.0149,0.0086,0.003,0.003],
    "N76":[0,0,0.041,0.042,0.0316,0.0236,0.0153,0.0099,0.0047,0.0047],
    "N83":[0,0.0002,0.0034,0.0046,0.0046,0.0023,0.0015,0.0014,0,0],
    "N80":[0,0,0.0034,0.0078,0.0113,0.0039,0,0,0,0],
    "N30":[0,0,0.0301,0.0299,0.0336,0.0415,0.045,0.0474,0.0421,0.0421],
    "N92":[0,0,0.0188,0.0173,0.0152,0.0035,0,0,0,0],
    "M17":[0,0,0.0049,0.0081,0.0209,0.0655,0.156,0.2255,0,0],
    "M75":[0,0,0.0122,0.0219,0.0475,0.0765,0.0911,0.095,0.0634,0.0634],
    "M51":[0,0.0006,0.0177,0.0277,0.0371,0.0469,0.0635,0.0796,0.0598,0.0598],
    "M19":[0,0,0.0069,0.0097,0.0158,0.0303,0.0472,0.0599,0.0455,0.0455],
    "M54":[0.002,0.0002,0.0751,0.1032,0.113,0.1281,0.1609,0.2054,0.181,0.181],
    "S93":[0.002,0.0017,0.0586,0.0413,0.0282,0.0243,0.022,0.0171,0.01,0.01],
    "M77":[0,0,0.0168,0.0241,0.0416,0.0488,0.0382,0.023,0.01,0.01],
    "M48":[0,0,0.0016,0.0038,0.0103,0.0293,0.0785,0.1542,0.1502,0.1502],
    "H35":[0,0.0002,0.0078,0.0094,0.0169,0.0282,0.0528,0.078,0.0628,0.0628],
    "H40":[0,0.0001,0.0075,0.0107,0.019,0.0269,0.0419,0.0642,0.0556,0.0556],
    "H52":[0,0,0.0327,0.0239,0.0376,0.0332,0.035,0.0349,0.0213,0.0213],
    "H25":[0,0,0,0,0.0018,0.0156,0.0599,0.1023,0.0583,0.0583],
    "H36":[0,0,0.0008,0.0018,0.0047,0.0106,0.0208,0.0317,0.02,0.02],
    "H04":[0,0,0.0446,0.0444,0.0498,0.0582,0.0716,0.0892,0.0751,0.0751],
    "H26":[0,0.0002,0.0003,0.0008,0.0036,0.0097,0.018,0.0315,0.0235,0.0235],
    "H50":[0.003,0.0008,0.0015,0.0007,0.0005,0,0,0,0,0],
    "H10":[0,0,0.0615,0.0697,0.0676,0.0712,0.085,0.1003,0.0881,0.0881],
    "H16":[0,0.0001,0.0252,0.0237,0.0241,0.0284,0.0352,0.0418,0.0342,0.0342],
    "M25":[0.0087,0.0189,0.0235,0.0263,0.0291,0.0358,0.0417,0.0474,0.0405,0.0405],
    "C73":[0,0,0.0019,0.0068,0.0119,0.0134,0.0139,0.0102,0.004,0.004],
    "C50":[0,0,0,0.0015,0.0072,0.0107,0.0095,0.007,0.0031,0.0031],
    "N64":[0,0.001,0.0051,0.0134,0.0196,0.0176,0.0124,0.0061,0.0013,0.0013],
    "D24":[0,0.0004,0.0032,0.009,0.0168,0.0124,0.0069,0.0029,0,0],
    "K64":[0.0009,0.0033,0.0129,0.0159,0.0139,0.0137,0.0139,0.0147,0.0102,0.0102],
    "N60":[0,0,0.0016,0.0062,0.0127,0.0022,0.0062,0.0027,0,0],
    "N63":[0,0.0004,0.0034,0.0104,0.0179,0.0496,0.0074,0.0034,0.0007,0.0007],
    "K80":[0,0,0.0012,0.0034,0.005,0.0061,0.0081,0,0.0112,0.0112],
    "E04":[0.0004,0.0008,0.0034,0.0084,0.0123,0.0154,0.0187,0.0149,0.0047,0.0047]
}

disease_type={
    "내과":["E11","I10","K21","Z11","I20","R10","K29","J20","K63","E78"],
    "소아청소년과":["A09","J02","J30","J03","J01","J18","J10","J06","R50"],
    "산부인과":["D25","Z34","N95","N72","N76","N83","N80","N30","N92"],
    "정형외과":["M17","M75","M51","M19","M54","S93","M77","M48","M25"],
    "일반외과":["C73","C50","N64","D24","K64","N60","N63","K80","E04"],
    "안과":["H35","H40","H52","H25","H36","H04","H26","H50","H10","H16"]
}

def predict_future_population(data): #1. predict population after 10 years
    k=[]

    for i in range(10):
        k.append(0)

    k[0]=round(float(born_rate/1000*current_total_population*10),2) #0~9 population based on born_rate
    for i in range(9):
        k[i+1]=float(data[i])
        if i==7:
            k[i+1]*=0.5
        elif i==8:
            k[i+1]*=0.125

    return k

def predict_number_of_patients(data): #2. predict patients based on disease_data
    k=dict()

    for key in disease_ratio.keys():
        k[key]=0
        for i in range(10):
            k[key]=round(k[key]+disease_ratio[key][i]*data[i],2)

    return k

def needed_medical_student(data): #3. determine answer
    patients=dict()
    number_of_patients_per_doctor=dict()

    total_needed_doctor=dict()
    k=dict()

    for key in disease_type.keys():

        patients[key]=0 #필수과별 환자수 구하기
        for i in disease_type[key]:
            patients[key]=round(patients[key]+data[i],2)

        number_of_patients_per_doctor[key]=round(1000*patients[key]/future_total_population,2) #의사 한명당 배정될 환자수 구하기

        total_needed_doctor[key]=round(patients[key]/number_of_patients_per_doctor[key],2) #필요한 필수과별 전체 의사 수 구하기

        k[key]=round(total_needed_doctor[key]-current_number_of_doctors[key]*2/3,2) #필수과별 입학생 수 구하기 #2/3

    return k


print("* 주어진 인구 데이터를 기반으로, 다음 해 의과대학 필수과 적정 입학 정원을 계산합니다.")
print("현재 연령대별 인구 수를 입력하세요.")
for i in range(10):
    current_population_data.append(int(input("%d~%d세: "%(i*10, (i+1)*10-1))))
current_total_population=sum(current_population_data)
print()

print("현재 필수과별 의사 수를 입력하세요.")
for key in disease_type.keys():
    current_number_of_doctors[key]=float(input("%s: "%key))
print()

born_rate=float(input("출생률을 입력하세요.: "))
print()

future_population_data=predict_future_population(current_population_data)
future_total_population=sum(future_population_data)

future_patients_data=predict_number_of_patients(future_population_data)

ans=needed_medical_student(future_patients_data)

print("예상 적정 필수과별 의과대학 입학생 수는 다음과 같습니다.")
for key in ans.keys():
    if ans[key]<0:
        ans[key]=0
    print("%s %d명"%(key, ans[key]))